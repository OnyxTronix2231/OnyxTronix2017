// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc.team2231.robot;

import org.usfirst.frc.team2231.robot.Buttons.Button;
import org.usfirst.frc.team2231.robot.commands.DriveAutoDisabler;
import org.usfirst.frc.team2231.robot.commands.LowerGearLift;
import org.usfirst.frc.team2231.robot.commands.RotateByAngle;
import org.usfirst.frc.team2231.robot.commands.Shoot;
import org.usfirst.frc.team2231.robot.commands.StartTrigger;
import org.usfirst.frc.team2231.robot.commands.SwitchToSpeedGear;
import org.usfirst.frc.team2231.robot.commands.SwitchToStrengthGear;
import org.usfirst.frc.team2231.robot.commands.UpperGearLift;
import org.usfirst.frc.team2231.robot.subsystems.Trigger;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    public JoystickButton collectBalls;
    public JoystickButton unloadBalls;
    public JoystickButton lowerGearLift;
    public JoystickButton upperGearLift;
    public JoystickButton openGearHolder;
    public JoystickButton closeGearHolder;
    public JoystickButton shoot;
    public JoystickButton load;
    public Joystick buttonStick;
    public JoystickButton switchToStrengthGear;
    public JoystickButton switchToSpeedGear;
    public Joystick driveStick;
    public JoystickButton driveAutoDisabler;
    public JoystickButton visionCenter; 
    public JoystickButton rotate;
    public OI() {
        driveStick = new Joystick(1);
        
        switchToSpeedGear = new JoystickButton(driveStick, Button.LB.value());
        switchToSpeedGear.whenPressed(new SwitchToSpeedGear());
        switchToStrengthGear = new JoystickButton(driveStick, Button.RB.value());
        switchToStrengthGear.whenPressed(new SwitchToStrengthGear());
        driveAutoDisabler = new JoystickButton(driveStick, Button.X.value());
        driveAutoDisabler.whenPressed(new DriveAutoDisabler());
//        visionCenter = new JoystickButton(driveStick, Button.A.value());
//        visionCenter.whenPressed(new CenterByVision(DriveTrain.VISION_LIFT_SETPOINT, RobotMap.gripLiftConfig));
        rotate = new JoystickButton(driveStick, Button.Y.value());
        rotate.whenPressed(new RotateByAngle(-43, false));
        
        buttonStick = new Joystick(0);
        
        //collectBalls = new JoystickButton(buttonStick, Button.A.value());
        //collectBalls.whileHeld(new CollectBalls(Collector.SPEED));
        //unloadBalls = new JoystickButton(buttonStick, Button.Y.value());
        //unloadBalls.whileHeld(new CollectBalls(-Collector.SPEED));
        load = new JoystickButton(buttonStick, Button.RB.value());
        load.whileHeld(new StartTrigger(Trigger.SPEED));
        shoot = new JoystickButton(buttonStick, Button.LB.value());
        shoot.whileHeld(new Shoot());
        lowerGearLift = new JoystickButton(buttonStick, Button.A.value()); // <---
        lowerGearLift.whenPressed(new LowerGearLift());
        upperGearLift = new JoystickButton(buttonStick, Button.Y.value()); // <---
        upperGearLift.whenPressed(new UpperGearLift());
    }

    public Joystick getButtonStick() {
        return buttonStick;
    }

    public Joystick getDriveStick() {
        return driveStick;
    }
}

